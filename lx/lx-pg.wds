$$ Define helper aliases for easy maintenance of the structure offsets
.block { aS PG_HeaderSize        (0x68)                                              }
.block { aS PG_ListOffset        (${PG_HeaderSize})                                  }
.block { aS PG_InstanceOffset    (${PG_ListOffset}+@@(sizeof(nt!_LIST_ENTRY)))       }
.block { aS PG_GroupListOffset   (${PG_InstanceOffset}+@$ptrsize)                    }
.block { aS PG_SessionOffset     (${PG_GroupListOffset}+@@(sizeof(nt!_LIST_ENTRY)))  }  

.block
{
    $$ Extract the LX_PROCESSGROUP from the list entry
    r @$t0 = ${$arg1} - ${PG_ListOffset}
    .printf /D "\t\t\t<b><u>Process Group 0x%P</u></b>\n", @$t0

    $$ Extract relevant fields from the structure
    r @$t1 = poi(@$t0 + ${PG_InstanceOffset})
    r @$t5 = poi(@$t0 + ${PG_SessionOffset})

    $$ Dump the fields
    .printf /D "\t\t\tInstance:      0x%P\n", @$t1
    .printf /D "\t\t\tSession:       0x%P\n\n", @$t5

    $$ Loop the list of thread groups
    r? @$t2 = (nt!_LIST_ENTRY*)@@(@$t0 + ${PG_GroupListOffset})
    .for (r? @$t3 = @$t2->Flink;
          @$t3 != @$t2;
          r? @$t3 = @$t3->Flink)
    {
        $$ Dump each LX_THREADGROUP in the list
        .push /r /q
        $$>a< c:\lx\lx-tg.wds @$t3
        .pop /r /q
    }

    $$ Newline for the next LX_PROCESSGROUP
    .printf "\n"
}

ad *